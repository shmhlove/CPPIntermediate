; Listing generated by Microsoft (R) Optimizing Compiler Version 19.21.27702.2 

	TITLE	C:\WorkSpace\GitHub\CPPIntermediate\u07_name_mangling\test1.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG29952 DB	'%d', 0aH, 00H
$SG29953 DB	'%f', 0aH, 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	?square@@YAHH@Z					; square
PUBLIC	?square@@YANN@Z					; square
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	__real@400a666666666666
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __real@400a666666666666
CONST	SEGMENT
__real@400a666666666666 DQ 0400a666666666666r	; 3.3
CONST	ENDS
; Function compile flags: /Odtp
; File C:\WorkSpace\GitHub\CPPIntermediate\u07_name_mangling\test1.cpp
_TEXT	SEGMENT
_main	PROC

; 24   : {

	push	ebp
	mov	ebp, esp

; 25   :     printf("%d\n", square(3));

	push	3
	call	?square@@YAHH@Z				; square
	add	esp, 4
	push	eax
	push	OFFSET $SG29952
	call	_printf

; 26   :     printf("%f\n", square(3.3));

	movsd	xmm0, QWORD PTR __real@400a666666666666
	movsd	QWORD PTR [esp], xmm0
	call	?square@@YANN@Z				; square
	fstp	QWORD PTR [esp]
	push	OFFSET $SG29953
	call	_printf
	add	esp, 12					; 0000000cH

; 27   : }

	xor	eax, eax
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\WorkSpace\GitHub\CPPIntermediate\u07_name_mangling\test1.cpp
_TEXT	SEGMENT
tv67 = -8						; size = 8
_d$ = 8							; size = 8
?square@@YANN@Z PROC					; square

; 19   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 20   :     return d * d;

	movsd	xmm0, QWORD PTR _d$[ebp]
	mulsd	xmm0, QWORD PTR _d$[ebp]
	movsd	QWORD PTR tv67[ebp], xmm0
	fld	QWORD PTR tv67[ebp]

; 21   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?square@@YANN@Z ENDP					; square
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\WorkSpace\GitHub\CPPIntermediate\u07_name_mangling\test1.cpp
_TEXT	SEGMENT
_n$ = 8							; size = 4
?square@@YAHH@Z PROC					; square

; 14   : {

	push	ebp
	mov	ebp, esp

; 15   :     return n * n;

	mov	eax, DWORD PTR _n$[ebp]
	imul	eax, DWORD PTR _n$[ebp]

; 16   : }

	pop	ebp
	ret	0
?square@@YAHH@Z ENDP					; square
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 954  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 955  :         int _Result;
; 956  :         va_list _ArgList;
; 957  :         __crt_va_start(_ArgList, _Format);

	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 958  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax

; 959  :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 960  :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 961  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

	push	ebp
	mov	ebp, esp

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H

; 644  :     }

	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

	push	ebp
	mov	ebp, esp

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
